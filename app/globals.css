@import "tailwindcss";

/* ===== Tokens (fixed gutters & header height) ===== */
:root{
  --gutter: 40px;
  --header-h: 80px;
  --cap-crop: 0.14em;
  --card-gap: 80px;
  --arrow-w: 1.8em;
}

.overlay-close {
  position: fixed;
  top: calc(var(--gutter) - var(--cap-crop));
  right: var(--gutter);
  left: auto !important;               /* <- beats any inline/class left */
  transform: none;                     /* guard against transform shifts */
}

/* Base */
*{ box-sizing:border-box; }
html, body { height: 100%; }
body {
  margin: 0;
  background:#000;
  color:#fff;
  padding: 0;
}

header * { line-height: 1; }

/* --- Header menu hover reveal --- */
/* Use a safe fallback (3ch) if --enu-w isn't set yet */
.menu-reveal { 
  max-width: 0;
  transition: max-width .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .menu-reveal,
.group:focus-within .menu-reveal {
  max-width: var(--enu-w, 3ch);
}

.menu-m {
  transition: transform .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .menu-m,
.group:focus-within .menu-m {
  transform: translateX(calc(var(--enu-w, 3ch) * -1));
}

.menu-enu {
  transform: translateX(var(--enu-w, 3ch));
  transition: transform .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .menu-enu,
.group:focus-within .menu-enu {
  transform: translateX(0);
}

/* Horizontal page gutters (apply only where needed) */
.gutters {
  padding-inline: var(--gutter);
}

/* Sticky header (L/R stick; center fades via JS in page.tsx) */
.header{
  position: sticky;
  top: 0;
  z-index: 50;
  height: var(--header-h);
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  padding-inline: var(--gutter);
  background: rgba(0,0,0,0.72);
  backdrop-filter: blur(6px);
}

/* Image window: crops & centers */
.crop{ position: relative; overflow: hidden; }

/* Card rhythm */
.card { margin-block: calc(var(--gutter) * 0.75); }


/* footer full-viewport block */
.full-viewport{
  /* was: calc(100svh - var(--header-h) - var(--gutter)) */
  min-height: calc(100svh - var(--header-h));
  display: flex;
  align-items: stretch;
  padding: var(--gutter);
}

/* Wipe + focus reveal */
.reveal{
  --dur: .9s;
  --ease: cubic-bezier(.2,.65,.2,1);
  position: relative;
  opacity: 0;
  filter: blur(6px);
  clip-path: inset(0 100% 0 0);
  will-change: clip-path, filter, opacity;
}
.reveal--in{
  opacity: 1;
  filter: blur(0);
  clip-path: inset(0 0 0 0);
  transition:
    clip-path var(--dur) var(--ease),
    filter .6s var(--ease),
    opacity .6s var(--ease);
}

/* Card titles â€” match global type weight/size */
.card-title{
  margin-top: var(--gutter);          /* space from the image */
  margin-bottom: 0;                   /* don't affect inter-card gap */
  font-weight: 600;
  line-height: 1;
  font-size: clamp(26px, 5vw, 40px);
}

/* page gutters for content blocks */
.frame {
  padding-inline: var(--gutter);   /* 40px L/R at all widths */
}

/* ensure <Image fill> has a box to fill */
.crop { position: relative; overflow: hidden; }

/* failsafe: if hook never fires, reveal anyway */
.force-visible { clip-path: inset(0 0 0 0) !important; opacity: 1 !important; filter: blur(0) !important; }

/* --- Overlay Close hover reveal (mirrors header Menu) --- */
.close-reveal{
  max-width: 0;
  transition: max-width .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .close-reveal,
.group:focus-within .close-reveal{
  max-width: var(--lose-w, 3ch);
}

.close-c{
  transition: transform .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .close-c,
.group:focus-within .close-c{
  transform: translateX(calc(var(--lose-w, 3ch) * -1));
}

.close-lose{
  transform: translateX(var(--lose-w, 3ch));
  transition: transform .5s cubic-bezier(.2,.65,.2,1);
}
.group:hover .close-lose,
.group:focus-within .close-lose{
  transform: translateX(0);
}